{"version":3,"file":"main.js","mappings":"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","sources":["webpack://location-timeline/./src/js/formatedDate.js","webpack://location-timeline/./src/js/posts.js","webpack://location-timeline/./src/js/geolocation.js","webpack://location-timeline/./src/js/modal.js","webpack://location-timeline/./src/js/utils.js","webpack://location-timeline/./src/js/timer.js","webpack://location-timeline/./src/js/recording.js","webpack://location-timeline/./src/js/app.js"],"sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport function formatedDate(date) {\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = String(date.getFullYear()).slice(-2);\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n  \n    return `${day}.${month}.${year} ${hours}:${minutes}`;\n  }\n  ","/* eslint-disable no-use-before-define */\nimport { formatedDate } from './formatedDate';\n\nexport function addTextPost(text, coords) {\n  const date = new Date();\n  const formattedDate = formatedDate(date);\n  const post = {\n    type: 'text',\n    text,\n    coords,\n    date: formattedDate,\n  };\n\n  savePostToLocalStorage(post);\n  renderPost(post);\n}\n\nexport function addAudioPost(audio, coords) {\n  const date = new Date();\n  const formattedDate = formatedDate(date);\n  const audioUrl = audio.src;\n  const post = {\n    type: 'audio',\n    audioUrl,\n    coords,\n    date: formattedDate,\n  };\n\n  savePostToLocalStorage(post);\n  renderPost(post);\n}\n\nexport function renderPost(post) {\n  const postElement = document.createElement('div');\n  postElement.className = 'post';\n\n  const postContainer = document.createElement('div');\n  postContainer.className = 'post__container';\n\n  if (post.type === 'text') {\n    const textElement = document.createElement('p');\n    textElement.className = 'post__text';\n    textElement.textContent = post.text;\n    postContainer.appendChild(textElement);\n  } else if (post.type === 'audio') {\n    const audioElement = new Audio(post.audioUrl);\n    audioElement.controls = true;\n    audioElement.className = 'audio__player custom__audio-player';\n    postContainer.appendChild(audioElement);\n  }\n\n  const dateElement = document.createElement('div');\n  dateElement.className = 'date';\n  dateElement.textContent = post.date;\n  postContainer.appendChild(dateElement);\n\n  const coordsElement = document.createElement('div');\n  coordsElement.className = 'coords';\n  coordsElement.textContent = `[${post.coords.latitude}, ${post.coords.longitude}]`;\n\n  postElement.appendChild(postContainer);\n  postElement.appendChild(coordsElement);\n\n  document.querySelector('.timeline').prepend(postElement);\n}\n\nfunction savePostToLocalStorage(post) {\n  const posts = JSON.parse(localStorage.getItem('posts')) || [];\n  posts.push(post);\n  localStorage.setItem('posts', JSON.stringify(posts));\n}\n\nexport function loadPostsFromLocalStorage() {\n  const posts = JSON.parse(localStorage.getItem('posts')) || [];\n  posts.forEach((post) => renderPost(post));\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport function getGeolocation() {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          const coords = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          };\n          resolve(coords);\n        }, () => {\n          reject();\n        });\n      } else {\n        reject();\n      }\n    });\n  }\n  ","import { parseCoordinates } from './utils';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function showModal(message, callback, text) {\n  const modal = document.createElement('div');\n  modal.className = 'modal';\n  modal.innerHTML = `\n      <div class=\"modal__content\">\n        <div class=\"modal__text\">Что-то пошло не так</div>\n        <p class=\"modal__text\">${message}</p>\n        <div class=\"modal__text\">Широта и долгота через запятую</div>\n        <input type=\"text\" class=\"manual__coords\" placeholder=\"51.50851, -0.12572\">\n        <div class=\"modal__btns\">\n          <button class=\"close__modal\">Отмена</button>\n          <button class=\"submit__coords\">Ок</button>\n        </div>\n      </div>\n  `;\n  document.body.appendChild(modal);\n\n  document.querySelector('.submit__coords').addEventListener('click', () => {\n    const coordsInput = document.querySelector('.manual__coords').value.trim();\n    try {\n      const coords = parseCoordinates(coordsInput);\n      callback(text, coords);\n      document.body.removeChild(modal);\n    } catch (error) {\n      // eslint-disable-next-line no-alert\n      alert('Неверный формат координат.');\n    }\n  });\n\n  document.querySelector('.close__modal').addEventListener('click', () => {\n    document.body.removeChild(modal);\n  });\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport function parseCoordinates(input) {\n    const regex = /^\\[?([-+]?[0-9]*\\.?[0-9]+),\\s*([-+]?[0-9]*\\.?[0-9]+)\\]?$/;\n    const match = input.match(regex);\n    if (!match) {\n      throw new Error('Invalid format');\n    }\n    return {\n      latitude: parseFloat(match[1]),\n      longitude: parseFloat(match[2]),\n    };\n  }","let timerInterval;\nlet startTime;\n\nexport function startTimer() {\n  clearInterval(timerInterval);\n  startTime = Date.now();\n  timerInterval = setInterval(() => {\n    const elapsedTime = Date.now() - startTime;\n    const minutes = String(Math.floor(elapsedTime / 60000)).padStart(2, '0');\n    const seconds = String(Math.floor((elapsedTime % 60000) / 1000)).padStart(2, '0');\n    document.querySelector('.timer').textContent = `${minutes}:${seconds}`;\n  }, 1000);\n}\n\nexport function stopTimer() {\n  clearInterval(timerInterval);\n}","import { addAudioPost } from './posts';\nimport { getGeolocation } from './geolocation';\nimport { showModal } from './modal';\nimport { startTimer, stopTimer } from './timer';\n\nlet mediaRecorder;\nlet audioChunks = [];\nlet recordingCancelled = false;\n\nexport function startAudioRecording() {\n  const mediaBtns = document.querySelector('.buttons__media');\n  navigator.mediaDevices.getUserMedia({ audio: true })\n    .then((stream) => {\n      mediaRecorder = new MediaRecorder(stream);\n      mediaRecorder.start();\n      mediaBtns.style.display = 'none';\n\n      mediaRecorder.addEventListener('dataavailable', (e) => {\n        audioChunks.push(e.data);\n      });\n\n      mediaRecorder.addEventListener('stop', () => {\n        if (recordingCancelled) {\n          audioChunks = [];\n          recordingCancelled = false;\n          mediaBtns.style.display = 'flex';\n          return;\n        }\n\n        const audioBlob = new Blob(audioChunks, { type: 'audio/ogg; codecs=opus' });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        const audio = new Audio(audioUrl);\n        audio.controls = true;\n        audio.className = 'audio__player custom__audio-player';\n        mediaBtns.style.display = 'flex';\n\n        getGeolocation().then((coords) => {\n          addAudioPost(audio, coords);\n        }).catch(() => {\n          showModal('К сожалению, нам не удалось определить ваше местоположение, пожалуйста, дайте разрешение на использование геолокации, либо введите координаты вручную.', addAudioPost, audio);\n        });\n      });\n\n      document.querySelector('.recording__controls').style.display = 'flex';\n      startTimer();\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-alert\n      alert('Не удалось получить доступ к микрофону.');\n    });\n}\n\nexport function stopAudioRecording() {\n  mediaRecorder.stop();\n  stopTimer();\n  document.querySelector('.recording__controls').style.display = 'none';\n}\n\nexport function cancelAudioRecording() {\n  recordingCancelled = true;\n  mediaRecorder.stop();\n  audioChunks = [];\n  stopTimer();\n  document.querySelector('.recording__controls').style.display = 'none';\n}","import { loadPostsFromLocalStorage, addTextPost } from './posts';\nimport { getGeolocation } from './geolocation';\nimport { showModal } from './modal';\nimport { startAudioRecording, stopAudioRecording, cancelAudioRecording } from './recording';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  loadPostsFromLocalStorage();\n\n  const postInput = document.querySelector('.post__input');\n\n  postInput.addEventListener('keypress', (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      const text = postInput.value.trim();\n      if (text) {\n        getGeolocation().then((coords) => {\n          addTextPost(text, coords);\n          postInput.value = '';\n        }).catch(() => {\n          showModal('К сожалению, нам не удалось определить ваше местоположение, пожалуйста, дайте разрешение на использование геолокации, либо введите координаты вручную.', addTextPost, text);\n        });\n      }\n    }\n  });\n\n  document.querySelector('.start__recording').addEventListener('click', startAudioRecording);\n  document.querySelector('.stop__recording').addEventListener('click', stopAudioRecording);\n  document.querySelector('.cancel__recording').addEventListener('click', cancelAudioRecording);\n});\n"],"names":["formatedDate","date","String","getDate","padStart","getMonth","getFullYear","slice","getHours","getMinutes","addTextPost","text","coords","post","type","Date","savePostToLocalStorage","renderPost","addAudioPost","audio","formattedDate","audioUrl","src","postElement","document","createElement","className","postContainer","textElement","textContent","appendChild","audioElement","Audio","controls","dateElement","coordsElement","latitude","longitude","querySelector","prepend","posts","JSON","parse","localStorage","getItem","push","setItem","stringify","getGeolocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","showModal","message","callback","modal","innerHTML","body","addEventListener","coordsInput","value","trim","input","match","Error","parseFloat","parseCoordinates","removeChild","error","alert","timerInterval","startTime","mediaRecorder","stopTimer","clearInterval","audioChunks","recordingCancelled","startAudioRecording","mediaBtns","mediaDevices","getUserMedia","then","stream","MediaRecorder","start","style","display","e","data","audioBlob","Blob","URL","createObjectURL","catch","now","setInterval","elapsedTime","minutes","Math","floor","seconds","stopAudioRecording","stop","cancelAudioRecording","forEach","postInput","key","shiftKey","preventDefault"],"sourceRoot":""}